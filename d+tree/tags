!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
BPT_TREE	bplustree.h	2;"	d
Node	bplustree.h	/^struct Node$/;"	s
allocate_childrens	bplustree.c	/^void allocate_childrens(struct Node *bpt)$/;"	f
array_insert_node	bplustree.c	/^void array_insert_node($/;"	f
array_insert_size_t	bplustree.c	/^void array_insert_size_t($/;"	f
aux_export	bplustree.c	/^void aux_export(FILE *dotfile, struct Node *bpt, int id)$/;"	f
aux_insert	bplustree.c	/^struct Node *aux_insert(struct Node **bpt, size_t element)$/;"	f
binary_search	bplustree.c	/^size_t binary_search(size_t to_add, size_t *list, size_t nb_elements)$/;"	f
bptree_isvalid	bplustree.c	/^int bptree_isvalid(struct Node *bpt)$/;"	f
bptree_new	bplustree.c	/^struct Node *bptree_new(size_t order)$/;"	f
cas	bplustree.h	/^    char cas;$/;"	m	struct:s_insert
childrens	bplustree.h	/^    struct Node **childrens;$/;"	m	struct:Node	typeref:struct:Node::Node
display	bplustree.c	/^void display(struct Node *bpt)$/;"	f
export	bplustree.c	/^void export(struct Node *bpt, char *path)$/;"	f
has_childs	bplustree.c	/^int has_childs(struct Node *bpt)$/;"	f
insert_leaf	bplustree.c	/^struct Node *insert_leaf(struct Node **bpt, size_t element)$/;"	f
main	main.c	/^int main(int argc, char *argv[])$/;"	f
nb_childrens	bplustree.h	/^    size_t nb_childrens;$/;"	m	struct:Node
nb_values	bplustree.h	/^    size_t nb_values;$/;"	m	struct:Node
new_child	bplustree.h	/^    struct Node *new_child;$/;"	m	struct:s_insert	typeref:struct:s_insert::Node
order	bplustree.h	/^    size_t order;$/;"	m	struct:Node
s_insert	bplustree.h	/^struct s_insert$/;"	s
value_to_add	bplustree.h	/^    size_t value_to_add;$/;"	m	struct:s_insert
values	bplustree.h	/^    size_t *values;$/;"	m	struct:Node
